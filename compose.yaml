services:

  #######
  # App #
  #######

  app:
    hostname: app
    build:
      target: app_dev
      args:
        - APP_UID=${APP_UID:-1000}
        - APP_GID=${APP_GID:-1000}
    entrypoint: app-php-entrypoint
    volumes:
      - ./etc/docker/php/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/zz-app.ini:ro
      - ./etc/docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/zz-xdebug.ini:ro
      - ./etc/docker/php/fpm.d/www.dev.conf:/usr/local/etc/php-fpm.d/zz-www.conf:ro
      - .:/app
    environment:
      - XDEBUG_MODE=off
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_CLIENT_PORT=9003
    ports:
      - "80:8000"

  app_test:
    hostname: app_test
    build:
      target: app_dev
      args:
        - APP_UID=${APP_UID:-1000}
        - APP_GID=${APP_GID:-1000}
    entrypoint: app-php-entrypoint
    volumes:
      - ./etc/docker/php/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/zz-app.ini:ro
      - ./etc/docker/php/fpm.d/www.dev.conf:/usr/local/etc/php-fpm.d/zz-www.conf:ro
      - .:/app
    environment:
      APP_ENV: "test"

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
